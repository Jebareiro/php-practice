<?php

/* 
--------------------------------------------------------
EXPLICACI√ìN R√ÅPIDA

‚úÖ try {}
Intenta ejecutar c√≥digo. Si hay error, salta al catch.

‚ö†Ô∏è catch (TipoError $e) {}
Atrapa el error. $e->getMessage() da detalles del problema.

‚õî throw new
Lanza una excepci√≥n manualmente.

üîö finally {}
Se ejecuta siempre al final. Ideal para limpiar cosas.

üì¶ Tipos de error:
- Exception
- InvalidArgumentException
- OutOfRangeException
- Error (nativo de PHP)

--------------------------------------------------------
*/


// üß™ 1. Manejar un error com√∫n: Divisi√≥n por cero
try {
    $resultado = 10 / 0; // ERROR: Divisi√≥n por cero
    echo "Resultado: $resultado";
} catch (DivisionByZeroError $error) {
    echo "‚ùå Error: Divisi√≥n por cero\n";
    echo "üì© Mensaje: " . $error->getMessage() . "\n";
}


// üß™ 2. Error por √≠ndice inexistente en array
try {
    $lista = [1, 2, 3];
    echo $lista[10]; // ERROR: √≠ndice fuera de rango
} catch (Error $error) {
    echo "‚ùå Error: √çndice fuera del arreglo\n";
    echo "üì© Mensaje: " . $error->getMessage() . "\n";
}


// üõ†Ô∏è 3. Excepciones Personalizadas

//  Creamos nuestra propia clase de error
class ErrorPersonalizado extends Exception {}

function procesar($valor) {
    if (!is_numeric($valor)) {
        throw new InvalidArgumentException("Debe ser un n√∫mero");
    }

    if ($valor < 0) {
        throw new OutOfRangeException("El n√∫mero no puede ser negativo");
    }

    if ($valor === 13) {
        throw new ErrorPersonalizado("El n√∫mero 13 no est√° permitido");
    }

    return $valor * 2;
}


// üß™ Prueba de funci√≥n con manejo de errores
try {
    $resultado = procesar(13);
    echo "Resultado procesado: $resultado\n";
} catch (InvalidArgumentException $error) {
    echo "‚ùå Error: Argumento inv√°lido\n";
    echo "üì© Mensaje: " . $error->getMessage() . "\n";
} catch (OutOfRangeException $error) {
    echo "‚ùå Error: N√∫mero fuera de rango\n";
    echo "üì© Mensaje: " . $error->getMessage() . "\n";
} catch (ErrorPersonalizado $error) {
    echo "‚ùå Error: Personalizado\n";
    echo "üì© Mensaje: " . $error->getMessage() . "\n";
} catch (Exception $error) {
    echo "‚ùå Error general\n";
    echo "üì© Mensaje: " . $error->getMessage() . "\n";
} finally {
    echo "üîö La ejecuci√≥n ha finalizado\n";
}

?>
